"use strict";(self.webpackChunksoul_anti_cheat=self.webpackChunksoul_anti_cheat||[]).push([[391],{8260:function(e,t,s){s.r(t),s.d(t,{contentTitle:function(){return r},default:function(){return h},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var n=s(7462),i=s(3366),a=(s(7294),s(3905)),o=["components"],l={sidebar_position:1},r="Settings",c={unversionedId:"docs/settings",id:"docs/settings",isDocsHomePage:!1,title:"Settings",description:"You can find the Settings module in the loader folder.",source:"@site/docs/docs/settings.md",sourceDirName:"docs",slug:"/docs/settings",permalink:"/Soul-Anti-Cheat/docs/docs/settings",editUrl:"https://github.com/Project-Soul/Soul-Anti-Cheat/tree/gh-pages/docs/docs/settings.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Custom Checks",permalink:"/Soul-Anti-Cheat/docs/docs/custom-checks"}},d=[{value:"Whitelist",id:"whitelist",children:[]},{value:"ChecksSettings",id:"checkssettings",children:[]},{value:"Reasons",id:"reasons",children:[]}],u={toc:d};function h(e){var t=e.components,s=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"settings"},"Settings"),(0,a.kt)("p",null,"You can find the Settings module in the loader folder."),(0,a.kt)("h2",{id:"whitelist"},"Whitelist"),(0,a.kt)("p",null,"The whitelist array must contain usernames or user ids. It decides whether or not a player should bypass the anti-cheat checks."),(0,a.kt)("h4",{id:"example"},"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'Settings.Whitelist = {\n    "proxilom", --[ Username ]\n    894920299   --[ User Id ]\n}\n')),(0,a.kt)("h2",{id:"checkssettings"},"ChecksSettings"),(0,a.kt)("p",null,"Holds a reference to checks' settings."),(0,a.kt)("h4",{id:"format"},"Format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'["CheckName"] = {\n    Disabled: boolean\n}\n')),(0,a.kt)("h4",{id:"default"},"Default:"),(0,a.kt)("p",null,"If ChecksSettings holds an index equal to the module's name, the settings will be equal to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"{\n    Disabled = false\n}\n")),(0,a.kt)("h4",{id:"example-1"},"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'Settings.ChecksSettings = {\n    ["Velocity"] = { Disabled = false }\n}\n')),(0,a.kt)("h2",{id:"reasons"},"Reasons"),(0,a.kt)("p",null,"Reasons the player will be kicked for if they trigger a check. The index can be used with global:Kick()"),(0,a.kt)("h4",{id:""}))}h.isMDXComponent=!0}}]);