"use strict";(self.webpackChunksoul_anti_cheat=self.webpackChunksoul_anti_cheat||[]).push([[76],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=l(n),d=o,h=f["".concat(u,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(h,a(a({ref:t},s),{},{components:n})):r.createElement(h,a({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1973:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],c={sidebar_position:10},u="SendCheckWebhook",l={unversionedId:"api/functions/send-check-webhook",id:"api/functions/send-check-webhook",isDocsHomePage:!1,title:"SendCheckWebhook",description:"`_G.SoulAntiCheat Player, reason: string)`",source:"@site/docs/api/functions/send-check-webhook.md",sourceDirName:"api/functions",slug:"/api/functions/send-check-webhook",permalink:"/Soul-Anti-Cheat/docs/api/functions/send-check-webhook",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"apiSidebar",previous:{title:"SetWhitelisted",permalink:"/Soul-Anti-Cheat/docs/api/functions/set-whitelisted"}},s=[],p={toc:s};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sendcheckwebhook"},"SendCheckWebhook"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"_G.SoulAntiCheat:SendCheckWebhook(player: Player, reason: string)")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Player player ","[The player to log]"),(0,i.kt)("li",{parentName:"ul"},"string reason ","[The reason the player has been logged]")),(0,i.kt)("p",null,"Sends a webhook to discord (primarly used for checks, you don't have to call it yourself). Only works when Enabled is true in ",(0,i.kt)("a",{parentName:"p",href:"https://www.reddit.com"},"WebhookSettings"),"."))}f.isMDXComponent=!0}}]);