"use strict";(self.webpackChunksoul_anti_cheat=self.webpackChunksoul_anti_cheat||[]).push([[145],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return y}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=u(n),y=a,h=f["".concat(p,".").concat(y)]||f[y]||l[y]||o;return n?r.createElement(h,c(c({ref:t},s),{},{components:n})):r.createElement(h,c({ref:t},s))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var u=2;u<o;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6314:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return s}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),c=["components"],i={sidebar_position:9},p="CanBypassCheck",u={unversionedId:"api/functions/can-bypass-check",id:"api/functions/can-bypass-check",isDocsHomePage:!1,title:"CanBypassCheck",description:"`_G.SoulAntiCheat Player)``",source:"@site/docs/api/functions/can-bypass-check.md",sourceDirName:"api/functions",slug:"/api/functions/can-bypass-check",permalink:"/Soul-Anti-Cheat/docs/api/functions/can-bypass-check",editUrl:"https://github.com/Project-Soul/Soul-Anti-Cheat/tree/gh-pages/docs/api/functions/can-bypass-check.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9}},s=[],l={toc:s};function f(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"canbypasscheck"},"CanBypassCheck"),(0,o.kt)("p",null,"`",(0,o.kt)("inlineCode",{parentName:"p"},"_G.SoulAntiCheat:CanBypassCheck(player: Player)")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Player player ","[The player to check]")),(0,o.kt)("p",null,"Returns whether or not both ",(0,o.kt)("a",{parentName:"p",href:"https://www.reddit.com"},"IsWhitelistedByDefault")," and ",(0,o.kt)("a",{parentName:"p",href:"https://www.reddit.com"},"IsWhitelisted")," are true."))}f.isMDXComponent=!0}}]);