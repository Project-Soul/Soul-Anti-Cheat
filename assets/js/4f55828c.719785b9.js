"use strict";(self.webpackChunksoul_anti_cheat=self.webpackChunksoul_anti_cheat||[]).push([[391],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return p}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),h=c(n),p=a,k=h["".concat(s,".").concat(p)]||h[p]||u[p]||o;return n?i.createElement(k,r(r({ref:t},d),{},{components:n})):i.createElement(k,r({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8260:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var i=n(7462),a=n(3366),o=(n(7294),n(3905)),r=["components"],l={sidebar_position:2},s="Settings",c={unversionedId:"docs/settings",id:"docs/settings",isDocsHomePage:!1,title:"Settings",description:"You can find the Settings module in the loader folder.",source:"@site/docs/docs/settings.md",sourceDirName:"docs",slug:"/docs/settings",permalink:"/Soul-Anti-Cheat/docs/docs/settings",editUrl:"https://github.com/Project-Soul/Soul-Anti-Cheat/tree/gh-pages/docs/docs/settings.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Checks",permalink:"/Soul-Anti-Cheat/docs/docs/checks"},next:{title:"MaidObject",permalink:"/Soul-Anti-Cheat/docs/docs/maid-object"}},d=[{value:"Whitelist",id:"whitelist",children:[]},{value:"ChecksSettings",id:"checkssettings",children:[]},{value:"Reasons",id:"reasons",children:[]},{value:"Physics",id:"physics",children:[{value:"MaxVelocity",id:"maxvelocity",children:[]},{value:"MaxStudsTeleport",id:"maxstudsteleport",children:[]}]},{value:"RaycastSettings",id:"raycastsettings",children:[{value:"MaxFlyDistance",id:"maxflydistance",children:[]}]},{value:"HumanoidSettings",id:"humanoidsettings",children:[{value:"MaxConsecutiveJumps",id:"maxconsecutivejumps",children:[]}]},{value:"RootSettings",id:"rootsettings",children:[{value:"WaitForRoot",id:"waitforroot",children:[]},{value:"ImportantParts",id:"importantparts",children:[]}]},{value:"WebhookSettings",id:"webhooksettings",children:[{value:"Enabled",id:"enabled",children:[]},{value:"WebhookId",id:"webhookid",children:[]},{value:"WebhookToken",id:"webhooktoken",children:[]}]},{value:"Misc",id:"misc",children:[{value:"VelocityDecimals",id:"velocitydecimals",children:[]},{value:"TeleportBack",id:"teleportback",children:[]}]}],u={toc:d};function h(e){var t=e.components,n=(0,a.Z)(e,r);return(0,o.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"settings"},"Settings"),(0,o.kt)("p",null,"You can find the Settings module in the loader folder."),(0,o.kt)("h2",{id:"whitelist"},"Whitelist"),(0,o.kt)("p",null,"The whitelist array must contain usernames or user ids. It decides whether or not a player should bypass the anti-cheat checks."),(0,o.kt)("h4",{id:"example"},"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'Settings.Whitelist = {\n    "proxilom", --[ Username ]\n    894920299   --[ User Id ]\n}\n')),(0,o.kt)("h2",{id:"checkssettings"},"ChecksSettings"),(0,o.kt)("p",null,"Holds a reference to ",(0,o.kt)("a",{parentName:"p",href:"https://project-soul.github.io/Soul-Anti-Cheat/docs/docs/checks"},"Checks"),"' settings."),(0,o.kt)("h4",{id:"format"},"Format:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'["CheckName"] = {\n    Disabled: boolean\n}\n')),(0,o.kt)("h4",{id:"default"},"Default:"),(0,o.kt)("p",null,"If the table doesn't hold an index equal to a ",(0,o.kt)("a",{parentName:"p",href:"https://project-soul.github.io/Soul-Anti-Cheat/docs/docs/checks"},"check"),"'s name, the settings will default to:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"{\n    Disabled = false\n}\n")),(0,o.kt)("h4",{id:"example-1"},"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'Settings.ChecksSettings = {\n    ["Velocity"] = { Disabled = false }\n}\n')),(0,o.kt)("h2",{id:"reasons"},"Reasons"),(0,o.kt)("p",null,"Reasons the player will be kicked for if they trigger a check. The index can be used with global:Kick(). It can hold curly brackets to hold extra data."),(0,o.kt)("h4",{id:"example-2"},"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'Settings.Reasons = {\n    ["Velocity"] = "\\nHigh Velocity\\nVelocity: {Velocity}\\n"\n}\n\n-- Check:\n_G.SoulAntiCheat:Kick(Player, "Velocity", RootVelocity)\n')),(0,o.kt)("h2",{id:"physics"},"Physics"),(0,o.kt)("p",null,"Anything regarding physics."),(0,o.kt)("h3",{id:"maxvelocity"},"MaxVelocity"),(0,o.kt)("p",null,"The greatest AssemblyLinearVelocity a player can have before getting kicked."),(0,o.kt)("h3",{id:"maxstudsteleport"},"MaxStudsTeleport"),(0,o.kt)("p",null,"The greatest amount of studs a player can travel before getting kicked."),(0,o.kt)("h2",{id:"raycastsettings"},"RaycastSettings"),(0,o.kt)("p",null,"Anything regarding raycasting."),(0,o.kt)("h3",{id:"maxflydistance"},"MaxFlyDistance"),(0,o.kt)("p",null,"The greatest amount of studs away a player can be from a surface before getting kicked."),(0,o.kt)("h2",{id:"humanoidsettings"},"HumanoidSettings"),(0,o.kt)("h3",{id:"maxconsecutivejumps"},"MaxConsecutiveJumps"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Deprecated")),(0,o.kt)("p",null,"The greatest amount of jumps in the air a player can perform before getting kicked. (Do not use as this won't work)"),(0,o.kt)("h2",{id:"rootsettings"},"RootSettings"),(0,o.kt)("p",null,"Anything regarding the HumanoidRootPart etc."),(0,o.kt)("h3",{id:"waitforroot"},"WaitForRoot"),(0,o.kt)("p",null,"Whether or not the anti-cheat needs to wait for the HumanoidRootPart."),(0,o.kt)("h3",{id:"importantparts"},"ImportantParts"),(0,o.kt)("p",null,"If an Instance has it's name in this array, it will kick the player."),(0,o.kt)("h2",{id:"webhooksettings"},"WebhookSettings"),(0,o.kt)("p",null,"Anything regarding Discord webhooks."),(0,o.kt)("h3",{id:"enabled"},"Enabled"),(0,o.kt)("p",null,"Whether or not logging should be enabled."),(0,o.kt)("h3",{id:"webhookid"},"WebhookId"),(0,o.kt)("p",null,"Your webhook's id."),(0,o.kt)("h3",{id:"webhooktoken"},"WebhookToken"),(0,o.kt)("p",null,"Your webhooks, token."),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"Anything miscellaneous."),(0,o.kt)("h3",{id:"velocitydecimals"},"VelocityDecimals"),(0,o.kt)("p",null,"The amount of decimals to be displayed in the Velocity check kick message."),(0,o.kt)("h3",{id:"teleportback"},"TeleportBack"),(0,o.kt)("p",null,"Whether or not the Teleport check should teleport players back."))}h.isMDXComponent=!0}}]);